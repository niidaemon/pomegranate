# ============================================================
# PostgreSQL Primary Configuration
# Purpose: Configure primary PostgreSQL instance
# ============================================================


# -----------------------------
# CONNECTION SETTINGS
# -----------------------------
# Listen on all network interfaces
listen_addresses = '*'

# Maximum number of concurrent connections
max_connections = ${POSTGRES_MAX_CONNECTIONS}

# Reserve a few connections for superusers
superuser_reserved_connections = 3


# -----------------------------
# MEMORY SETTINGS
# -----------------------------
# Shared memory buffer pool
shared_buffers = ${POSTGRES_SHARED_BUFFERS}

# Effective cache size estimate
effective_cache_size = ${POSTGRES_EFFECTIVE_CACHE_SIZE}

# Memory per sort/join operation
work_mem = ${POSTGRES_WORK_MEM}

# Memory for maintenance tasks like VACUUM
maintenance_work_mem = ${POSTGRES_MAINTENANCE_WORK_MEM}

# Use huge pages if available
huge_pages = try


# -----------------------------
# WAL (WRITE-AHEAD LOG) SETTINGS
# -----------------------------
# Enable replication-level WAL
wal_level = replica

# Required for pg_rewind and some replication scenarios
wal_log_hints = on

# Number of concurrent WAL sender processes
max_wal_senders = 10

# Number of replication slots
max_replication_slots = 10

# Keep at least 1GB of WAL files for standby catch-up
wal_keep_size = 1GB

# Compress WAL files to save space
wal_compression = on


# -----------------------------
# ARCHIVE SETTINGS
# -----------------------------
# Enable WAL archiving
archive_mode = on

# Command to push WAL segments to pgBackRest
archive_command = 'pgbackrest --stanza=main archive-push %p'

# Force archive every 5 minutes if no activity
archive_timeout = 300


# -----------------------------
# REPLICATION SETTINGS
# -----------------------------
# Ensure commits wait for standby confirmation
synchronous_commit = on

# Define synchronous standby servers
synchronous_standby_names = 'standby1,standby2'

# Allow read-only queries on standby
hot_standby = on

# Feedback to prevent query conflicts on standby
hot_standby_feedback = on


# -----------------------------
# CHECKPOINT SETTINGS
# -----------------------------
# Maximum time between checkpoints
checkpoint_timeout = 15min

# Target completion percentage for checkpoints
checkpoint_completion_target = 0.9

# Maximum WAL size before checkpoint
max_wal_size = 4GB

# Minimum WAL size to keep
min_wal_size = 1GB


# -----------------------------
# LOGGING SETTINGS
# -----------------------------
# Enable logging collector
logging_collector = on

# Directory for log files
log_directory = 'pg_log'

# Log filename pattern
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'

# Rotate logs daily
log_rotation_age = 1d

# Rotate logs after 100MB
log_rotation_size = 100MB

# Include detailed prefix in logs
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Log checkpoints
log_checkpoints = on

# Log connections and disconnections
log_connections = on
log_disconnections = on

# Log lock waits
log_lock_waits = on

# Log queries longer than 1 second
log_min_duration_statement = 1000


# -----------------------------
# PERFORMANCE SETTINGS
# -----------------------------
# Load pg_stat_statements extension
shared_preload_libraries = 'pg_stat_statements'

# Maximum number of tracked statements
pg_stat_statements.max = 10000

# Track all statements
pg_stat_statements.track = all

# Track I/O timing
track_io_timing = on

# Track all function calls
track_functions = all


# -----------------------------
# AUTOVACUUM SETTINGS
# -----------------------------
# Enable autovacuum
autovacuum = on

# Number of autovacuum workers
autovacuum_max_workers = 4

# Time between autovacuum runs
autovacuum_naptime = 10s

# Trigger vacuum when 5% of table changes
autovacuum_vacuum_scale_factor = 0.05

# Trigger analyze when 5% of table changes
autovacuum_analyze_scale_factor = 0.05
